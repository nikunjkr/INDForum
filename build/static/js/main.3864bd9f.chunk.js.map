{"version":3,"sources":["history.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","api/index.js","actions/Posts.js","components/Posts/Posts.js","components/AddComment/AddComment.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/AddReply/AddReplyToComment.js","components/Thread/Thread.js","Routes.js","logo.png","App.js","reducers/Posts.js","reducers/Comments.js","reducers/Thread.js","reducers/User.js","reducers/index.js","index.js"],"names":["history","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","margin","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","mx","width","padding","overlay","top","left","color","overlay2","right","grid","details","title","cardActions","Post","post","classes","useStyles","postid","post_id","console","log","Card","className","CardHeader","avatar","Avatar","aria-label","src","user_image","name","IconButton","upvotes","downvotes","Typography","variant","component","image_link","CardMedia","image","Title","caption","timePosted","CardActions","Button","size","onClick","localStorage","setItem","window","location","assign","noofcomments","API","axios","create","baseURL","interceptors","request","use","req","Cookies","set","headers","Authorization","get","upvoteComment","comment_id","put","createComment","Comment","getThread","getPostComments","dispatch","a","data","type","payload","comment","api","replyComment","up_level_cid","Posts","useDispatch","posts","useSelector","state","length","Grid","item","xs","container","spacing","map","key","x3","sm","CircularProgress","AddComment","props","username","User","Name","useState","setComment","handleAddComment","e","preventDefault","commentAs","TextField","id","label","multiline","rows","fullWidth","onChange","event","value","target","useEffect","Paper","style","marginTop","wrap","alt","zeroMinWidth","textAlign","timeCommented","upVotes","downVotes","CommentList","match","params","comments","Comments","i","push","sort","b","AddReplyToComments","Thread","commentid","getItem","threaddd","find","AddReplyToComment","thread_items","keys","Routes","path","exact","App","logo","reducer","action","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3864bd9f.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n    margin:\"10px\"\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n    mx:\"200px\",\r\n    width:\"75%\",\r\n    padding:\"20px\"\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport history from '../../../history'\r\n\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = ({ post }) => {\r\n  const classes = useStyles();\r\n  const postid = post?.post_id;\r\n\r\n  console.log(post);\r\n  return (\r\n    <Card className={classes}>\r\n        <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={post?.user_image}>\r\n          \r\n          </Avatar>\r\n        }\r\n                title= {post?.name}\r\n></CardHeader>\r\n        {/* {console.log(post?.Post_Id)} */}\r\n        {/* {console.log(JSON.parse(post.Title))} */}\r\n        <div className=\"post__header\">\r\n          {/* <h4 className=\"post__header__username\">Posted by {post?.name}</h4> */}\r\n          <IconButton className=\"post__header__upvote\">\r\n            <ThumbUpAltIcon />\r\n          </IconButton>\r\n          {post?.upvotes-post?.downvotes}\r\n          <IconButton className=\"post__header__downvote\">\r\n            <ThumbDownAltIcon />\r\n          </IconButton>\r\n          \r\n        </div>\r\n        <Typography variant=\"h3\" component=\"h3\">\r\n          {post?.title}\r\n        </Typography>\r\n       \r\n        {(post?.image_link !==\"\" ) ? (<CardMedia\r\n          className={classes.media}\r\n          image={post?.image_link}\r\n          title={post?.Title}\r\n\r\n        />):( <CardMedia title={post?.Title}/>)}\r\n        {/* <Link to=\"/:postid/comments\">Comments</Link> */}\r\n\r\n        {/* <h3>{post.name}</h3> */}\r\n        {/* <img src={post.user_image} alt=\"Loading\"></img> */}\r\n\r\n        <h4>{post?.caption}</h4>\r\n        {/* <h3>{post?.image_Link}</h3> */}\r\n\r\n        <h3>{post?.timePosted}</h3>\r\n       \r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => {\r\n          localStorage.setItem(\"post_id\", {postid})\r\n  window.location.assign(`/${postid}/comments`)\r\n}} >\r\n          {post?.noofcomments} Comments \r\n          \r\n        </Button  >\r\n       <form>\r\n    \r\n</form>\r\n        {/* <Link to=\"/\"></Link> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nconst API = axios.create({ baseURL: 'https://ec2-52-206-109-241.compute-1.amazonaws.com/team2practo' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n//   if (localStorage.getItem('profile')) {\r\n    // req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    Cookies.set('token','eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzg0OTc1OCwiZXhwIjoxNjEzODUzMzU4fQ.pjrx4ZDqE0dZCJadgl6EUVep3mGcZHZa1FcN4r1VjHI')\r\n     req.headers.Authorization = Cookies.get('token');\r\n    // req.headers.Authorization = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzgzNDg4MCwiZXhwIjoxNjEzODM4NDgwfQ.76-J-3veuHiZU2y3-o6S5s4YAAWbVWolaRt-0WGIHVg\";\r\n//   }\r\n\r\n  return req;\r\n});\r\n\r\n\r\n// export const fetchPosts = () => fetch(url).then(res => res.json())\r\nexport const fetchPosts = () => API.get('/posts');\r\n// export const fetchPosts = () => axios.get(`${url}/posts`');\r\n// export const fetchPostDetails = (postid) => API.get(`${url}/`)\r\nexport const upvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\r\n    'upordown':'u'});\r\n    \r\nexport const getPostComments= (postid) => API.get(`/${postid}/comments`);\r\n\r\nexport const downvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\r\n    'upordown':'d'});\r\nexport const createComment =(postid,Comment) => API.post('/comments', {'post_id': postid, 'comment' : Comment});\r\nexport const replyComment =(postid,Comment,up_level_cid) => API.post('/comments', {'post_id': postid, 'comment' : Comment, 'up_level_cid' :up_level_cid});\r\n//  forgot / in beginning\r\nexport const getThread = (comment_id) => API.get(`/comments/${comment_id}/thread`);\r\nexport const getUser =() => API.get(`/users`);\r\n","import * as api from \"../api/index.js\";\r\n\r\n// action creaters return actions\r\n// default keyword showed error\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.fetchPosts();\r\n        // console.log(data,\"secret\");\r\n        dispatch({type:'FETCH_ALL' , payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n// return actions;\r\n}\r\nexport const getPostComments = (post_id) => async (dispatch) => {\r\n    try{\r\n        const {data} =await api.getPostComments(post_id);\r\n      \r\n        dispatch({type:'GET_POST_COMMENTS', payload: data});\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport const createComment = (postid,comment) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'CREATE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const replyComment = (postid,comment,up_level_cid) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment,up_level_cid);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'REPLY_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const upvoteComment = (comment_id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.upvoteComment(comment_id);\r\n\r\n    dispatch({ type: 'UPVOTE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(\"error in upvote comments\");\r\n  }\r\n};\r\n\r\nexport const downvoteComment = (comment_id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.upvoteComment(comment_id);\r\n\r\n    dispatch({ type: 'DOWNVOTE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getThread = (comment_id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getThread(comment_id);\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_THREAD', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getUser = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUser();\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_USER', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};","import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Posts.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/Posts\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   // forgot to call\r\n  //   dispatch(getPosts());\r\n  //   console.log(\"Dispatching\");\r\n  // }, [dispatch]);\r\n\r\n  // Allows to extract data from the Redux store state, using a selector function.\r\n  // useSelector() will also subscribe to the Redux store, and run  selector whenever an action is dispatched.\r\n  const posts = useSelector((state) => state.Posts);\r\n  // console.log(posts);\r\n  return !posts.length ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      item\r\n      xs={6}\r\n    //   className=\"post\"\r\n      container\r\n    //   direction=\"column\"\r\n    //   justify=\"flex-start\"\r\n    //   alignItems=\"center\"\r\n        \r\n      spacing={6}\r\n    >\r\n      {posts.map((post, key) => (\r\n        <Grid key={key} item x3={12} sm={12}>\r\n          <Post post={post} />\r\n        </Grid>\r\n      ))}\r\n    \r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { HouseRounded } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport {createComment, getPostComments} from '../../actions/Posts'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst AddComment = (props) => {\r\n\r\n  const getUsername = state => state.User?.Name; \r\n\r\n  const username =useSelector(getUsername);\r\n\r\n  console.log(props.post?.post_id,\"adding comments\")\r\n  const postid=props.post?.post_id;\r\n  const up_level_cid=props.up_level_cid;\r\n  console.log(up_level_cid);\r\n  const dispatch = useDispatch();\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const clear = () => {\r\n    setComment('');\r\n  };\r\n\r\n  const handleAddComment = async(e) => {\r\n    e.preventDefault();\r\n    dispatch(createComment( postid, comment));\r\n    dispatch(getPostComments(postid))\r\n    clear();\r\n  }\r\n  const commentAs= \"Comment as \" + username\r\n\r\n  // useEffect(()=>{ \r\n  //   handleAddComment();\r\n  // },)\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        margin=\"normal\"\r\n        label={commentAs}\r\n        multiline\r\n        rows={4}\r\n        // defaultValue=\"Default Value\"\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        fullWidth\r\n        onChange={event => {\r\n          const { value } = event.target;\r\n          setComment(value )}}\r\n        value={comment}\r\n      />\r\n     \r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n        Comment\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n\r\n","import React, { useEffect, useState} from \"react\";\r\nimport { Divider, Avatar, Grid, Paper, CircularProgress,IconButton } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport { getPostComments } from \"../../actions/Posts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../Posts/Post/Post\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\r\nimport moment from 'moment';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\n\r\n\r\nimport {upvoteComment} from '../../actions/Posts'\r\n\r\nimport AddComment from '../AddComment/AddComment'\r\nimport { get } from \"js-cookie\";\r\n\r\nconst Comment = (props) => {\r\n\r\n  const post_id = props.comment?.post_id;\r\n\r\n  \r\n  \r\n  console.log(\"Seeing the comments of a post\",props);\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    // dispatch(upvoteComment(props.comment?.comment_id, \"u\"))\r\n    dispatch(getPostComments(post_id))\r\n    console.log(\"useEffect in comments\")\r\n  },[dispatch,props.comment?.comment_id,post_id]);\r\n\r\n  console.log(props, \"inside comments\");\r\n    \r\n\r\n    return (\r\n    <Paper style={{ padding: \"40px 20px\", marginTop: 10 }}>\r\n    <Grid  id=\"comment-grid\" container wrap=\"nowrap\" spacing={2}>\r\n        <Grid item>\r\n            <Avatar alt=\"Remy Sharp\" src={props?.comment?.user_image} />\r\n        </Grid>\r\n\r\n        <Grid justifyContent=\"left\" item xs zeroMinWidth>\r\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>{props.comment?.name}</h4>\r\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\r\n                {/* {moment(props.comment?.timeCommented).fromNow()} */}\r\n                {(props.comment?.timeCommented)}\r\n            </p>\r\n            <p style={{ textAlign: \"left\" }}>\r\n                {props?.comment?.comment}\r\n            </p>\r\n            \r\n            <IconButton className=\"post__header__upvote\" onClick={()=>dispatch(upvoteComment(props.comment?.comment_id, \"u\"))}>\r\n            <ThumbUpAltIcon color=\"primary\"/>\r\n          </IconButton >\r\n          {props.comment?.upVotes-props.comment?.downVotes}\r\n          <IconButton className=\"post__header__downvote\">\r\n            <ThumbDownAltIcon />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n      \r\n    </Grid>\r\n    {/* <h3>Thread</h3> */}\r\n      <Button size=\"small\" color=\"black\" onClick={()=> {\r\n        localStorage.setItem(\"post_id\", props.comment?.post_id )\r\n        window.location.assign(`/comments/${props.comment?.comment_id}/thread`)}} >View Thread</Button>\r\n</Paper>)\r\n}\r\n\r\nexport default Comment;","import React, { useEffect } from \"react\";\r\nimport {\r\n  Divider,\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport { getPostComments } from \"../../actions/Posts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../Posts/Post/Post\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport AddComment from \"../AddComment/AddComment\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport { LocalFlorist } from \"@material-ui/icons\";\r\nimport commentList from './CommentList';\r\n\r\nconst CommentList = ({ match }) => {\r\n  //   const posts = useSelector((state) => state.Posts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const id = match.params.postid;\r\n  var post = null;\r\n  var comment = [];\r\n  useEffect(() => {\r\n    dispatch(getPostComments(id));\r\n    console.log(\"dispatching getPostComments\");\r\n  }, [dispatch, id]);\r\n\r\n  const comments = useSelector((state) => state.Comments);\r\n  const posts = useSelector((state) => state.Posts);\r\n\r\n  console.log(comments, \"Heare are comments\");\r\n  // console.log(id);\r\n  // console.log(posts[7]?.post_id);\r\n  for (let i = 0; i < posts.length; i++) {\r\n    if (posts[i]?.post_id == id) {\r\n      post = posts[i];\r\n    }\r\n  }\r\n  for (let i = 0; i < comments.length; i++) {\r\n    if (comments[i]?.post_id == id) {\r\n      comment.push(comments[i]);\r\n    }\r\n  }\r\n  comment.sort((a, b) => (a?.timePosted > b?.timePosted ? -1 : 1));\r\n \r\n  console.log(post, \"new post\");\r\n  console.log(comments, \"zero\");\r\n  return (\r\n    <div style={{  padding: 50 }} className=\"App\">\r\n      <Grid container spacing={3}>\r\n         <Grid item xs={6}>\r\n        {/* !post ? <CircularProgress />:  */}\r\n        <Post post={post} />\r\n        <AddComment post ={post} />\r\n      </Grid>\r\n      </Grid>\r\n     \r\n\r\n      {comment.map((comment, key) => (\r\n        <Grid key={key} item xs={9} sm={6}>\r\n          <Comment comment={comment} />\r\n        </Grid>\r\n      ))}\r\n\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\nexport default CommentList;\r\n","import React, { useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { HouseRounded } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport {replyComment} from '../../actions/Posts'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst AddReplyToComments= (props) => {\r\n  console.log(props.post?.post_id,\"adding comments\")\r\n  const postid=props.post?.post_id;\r\n  const up_level_cid=props.up_level_cid;\r\n  console.log(up_level_cid);\r\n  const dispatch = useDispatch();\r\n  const [comment, setComment] = useState('');\r\n\r\n  const clear = () => {\r\n    setComment('');\r\n  };\r\n\r\n  const handleAddComment = async(e) => {\r\n    e.preventDefault();\r\n    await dispatch(replyComment( postid, comment,up_level_cid));\r\n    clear();\r\n  }\r\n\r\n  // useEffect(()=>{\r\n  \r\n  // })\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        margin=\"normal\"\r\n        label=\"Comment as \"\r\n        multiline\r\n        rows={4}\r\n        // defaultValue=\"Default Value\"\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        fullWidth\r\n        onChange={(event) => setComment(event.target.value)}\r\n        value={comment}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n        Reply\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddReplyToComments;\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport {getPostComments, getPosts, getThread} from '../../actions/Posts';\r\nimport Comment from '../Comment/Comment';\r\n\r\nimport history from '../../history';\r\nimport Post from '../Posts/Post/Post';\r\nimport AddReplyToComment from '../AddReply/AddReplyToComment';\r\n\r\n\r\nconst Thread = ({match}) => {\r\n   \r\n    const comment_id=match?.params?.commentid;\r\n\r\n    // console.log(\"matching\",match);\r\n\r\n    const post_id =localStorage.getItem(\"post_id\");\r\n\r\n    // console.log(\"localstore\",post_id)\r\n\r\n    const threaddd = useSelector((state)=> {\r\n        console.log(\"haha\",state)\r\n        return state.Thread});\r\n\r\n    console.log(\"threaddd\", threaddd);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getThread(comment_id))\r\n        // dispatch(getPosts);\r\n        dispatch(getPostComments(post_id))\r\n    },[dispatch,post_id,comment_id])\r\n\r\n    const posts = useSelector((state)=> state.Posts);\r\n\r\n    const post= posts.find(post=> post.post_id == post_id);\r\n    console.log(\"seriosdebug\",post);\r\n    const comments = useSelector((state)=> state.Comments);\r\n    console.log(\"kkk\", comments)\r\n    const comment=comments.find(comment => comment.comment_id ==comment_id)\r\n\r\n\r\n    // const thread = useSelector((state)=> {\r\n    //     console.log(\"haha\",state)\r\n    //     return state.Thread});\r\n    // console.log(thread);\r\n\r\n  \r\n   \r\n    return (\r\n        <div>\r\n            {/* <comment comment= */}\r\n{/*             \r\n            {!thread.length ?<div> <h1>Thread not exit\r\n\r\n            </h1> <button onClick={history.goBack}>Go Back</button></div>:  */}\r\n\r\n            <div>\r\n                {/* <Post post={post}/> */}\r\n                <Comment comment={comment}/>\r\n                <AddReplyToComment post ={post_id} up_level_cid={comment_id} />{ threaddd.map((thread_items, keys) => \r\n            <div keys={keys}>\r\n            <Comment comment={thread_items} />\r\n            </div>)} </div>  \r\n            \r\n        </div>\r\n    )\r\n            \r\n}\r\nexport default Thread;\r\n","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport history from \"./history\";\r\nimport Posts from \"./components/Posts/Posts\";\r\n\r\nimport CommentList from \"./components/CommentList/CommentList\";\r\nimport Thread from './components/Thread/Thread';\r\n\r\nconst Routes = () => (\r\n  <Router history={history}>\r\n    <Switch>\r\n     \r\n      <Route path=\"/\" exact>\r\n        <Posts />\r\n      </Route>\r\n      <Route path=\"/:postid/comments\" component={CommentList} exact />\r\n      <Route path=\"/comments/:commentid/thread\" component={Thread} exact/>\r\n    </Switch>\r\n  </Router>\r\n);\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/logo.7c0ee393.png\";","import React, {useEffect} from \"react\";\nimport './App.css';\nimport Posts from './components/Posts/Posts'\n\nimport CommentList from './components/CommentList/CommentList'\n// import {Container, AppBar, Typography} from \"@material-ui/core\"\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\"\nimport {getPosts, getUser} from './actions/Posts';\nimport Routes from './Routes';\nimport logo from './logo.png'\n\nconst App = () => {\n\n  // console.log(store);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // forgot to call\n    dispatch(getPosts());\n    dispatch(getUser());\n    console.log(\"Dispatching\");\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"app__header\">\n          <img className=\"app__headerImage\" src={logo} alt=\"Logo\"/>\n\n      </div>\n    <div className=\"app\">\n      \n      <Router>\n              <Routes />  \n          \n       </Router>\n      <div>\n        {/* <Posts/> */}\n      </div>\n    </div>\n    </>\n  )\n    \n    \n  \n}\n\nexport default App;\n","// reducer is function which accepts a state and an action\r\n\r\nconst reducer = (Posts=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_ALL':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return Posts;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Comments= [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_POST_COMMENTS':\r\n            return  action.payload ;\r\n        case 'CREATE':\r\n            return [...Comments, action.payload] ;\r\n        case 'UPVOTE_COMMENT':\r\n            return Comments ;\r\n        case 'DOWNVOTE_COMMENT':\r\n            return Comments;\r\n        // case 'GET_THREAD':\r\n        //     return action.payload;\r\n        default:\r\n            return Comments;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Thread=[], action) => {\r\n    switch(action.type) {\r\n        \r\n        case 'GET_THREAD':\r\n            return action.payload;\r\n\r\n        case 'REPLY_COMMENT':\r\n            return action.payload;\r\n        default:\r\n            return Thread;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nconst reducer = (User=[], action) => {\r\n    switch(action.type) {\r\n        case 'GET_USER':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return User;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","// Step 2\r\nimport {combineReducers} from \"redux\";\r\nimport Posts from \"./Posts\"\r\nimport Comments from \"./Comments\"\r\nimport Thread from \"./Thread\"\r\nimport User from \"./User\"\r\nexport const reducers = combineReducers ({\r\n    Posts :Posts,\r\n    Comments:Comments,\r\n    Thread:Thread,\r\n    User:User,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider } from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./reducers\"\n\n// STORE -->global state\n// to set up redux create a store\n\n//  Step 1 \nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n// ACTION INCREMENT\n\n// Reducer\n\n// Dispach dispach this action to reducer store gets update\n//donot forget to pass store props\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}